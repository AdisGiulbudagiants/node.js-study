//0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55

setTimeout(() => console.log("Timeout"), 0)

/**Это Кэшмэп и с его помощью можно сохранять значения
 *
 * Если мы найдем определнные значения чисел Фибоначи, то мы сохраним его в Кэше.
 * И далее, когда нам понадобится найти определенное число Фибоначи снова, мы посмотрим есть ли оно уже в Кэше.
 * Если есть, мы просто возьмем его от туда.
 */
const cache = new Map()

function fib(index) {
  return new Promise((resolve, reject) => {
    if (index === 0 || index === 1) return resolve(index)
    /**Это проверка, есть ли уже значение Фибоначи в Кэше*/
    if (cache.has(index)) {
      return resolve(cache.get(index))
    }
    setImmediate(() => {
      fib(index - 1).then((fib1) =>
        fib(index - 2).then((fib2) => {
          cache.set(index, fib1 + fib2)
          resolve(fib1 + fib2)
        })
      )
    })
  })
}

/**В такой реализации мы можем высчитывать числа Фибаначи с очень большим индексом
 *
 * В этом примере мы НЕ блокируем цикл событий и мы используем кэш, чтобы не выполнять одну и ту же задачу несколько раз.
 */

fib(80).then((res) => console.log(res))
